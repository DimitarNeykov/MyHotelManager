@model MyHotelManager.Web.ViewModels.Hotels.HotelDashboardViewModel

@{
    this.ViewData["Title"] = "My Hotels";
    var thisYear = DateTime.Now.Year;
    var oneYearEarly = DateTime.Now.Year - 1;
    var twoYearEarly = DateTime.Now.Year - 2;
}
<h1 class="text-center mb-5 font-italic">@Model.Name</h1>
<div class="row text-center">
    <div class="col-xl-4 col-md-4 mb-4">
        <div class="card shadow">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Sofia</h6>
            </div>
            <div class="card-body">
                <div id="displayMomentSofia"></div>
                <hr />
                <div id="displayJsDateSofia"></div>
            </div>
        </div>
    </div>

    <div class="col-xl-4 col-md-4 mb-4">
        <div class="card shadow">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">London</h6>
            </div>
            <div class="card-body">
                <div id="displayMomentLondon"></div>
                <hr />
                <div id="displayJsDateLondon"></div>
            </div>
        </div>
    </div>

    <div class="col-xl-4 col-md-4 mb-4">
        <div class="card shadow">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Moscow</h6>
            </div>
            <div class="card-body">
                <div id="displayMomentMoscow"></div>
                <hr />
                <div id="displayJsDateMoscow"></div>
            </div>
        </div>
    </div>
</div>

<hr class="mb-4" />

<h6 class="m-0 font-weight-bold text-primary text-center mb-4 text-capitalize">Reservations in process!</h6>
<div class="progress mb-4">
    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="@Model.ArrivedReservationsForToday" aria-valuemin="0" aria-valuemax="@Model.ReservationsForToday" style="width: @Model.PercentageOfArrivedReservations%">@Model.ArrivedReservationsForToday / @Model.ReservationsForToday</div>
</div>

<hr class="mb-4" />

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary text-center text-capitalize">Reservations per months</h6>
    </div>
    <div class="card-body">
        <div class="chart-area">
            <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
            <canvas id="AreaChart" style="display: block; width: 337px; height: 160px;" width="337" height="160" class="chartjs-render-monitor"></canvas>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xl-6 col-lg-6">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary text-center">Room Occupancy</h6>
            </div>
            <div class="card-body">
                <div class="chart-pie">
                    <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                    <canvas id="PieChart" width="419" height="320" style="display: block; width: 419px; height: 320px;"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-6 col-lg-6">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary text-center text-capitalize">Total reservations for the last three years</h6>
            </div>
            <div class="card-body">
                <div class="chart-bar">
                    <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                    <canvas id="BarChart" width="419" height="320" class="chartjs-render-monitor" style="display: block; width: 419px; height: 320px;"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script src="~/lib/chart.js/Chart.min.js"></script>
    <script src="~/js/demo/chart-area-demo.js"></script>
    <script src="~/js/demo/chart-pie-demo.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.7/moment-timezone-with-data-2010-2020.min.js"></script>

    <script type="text/javascript">
        function startTimeSofia() {
            var today = moment.tz("Europe/Sofia");
            document.getElementById('displayMomentSofia').innerHTML = today.format('HH:mm:ss');
            document.getElementById('displayJsDateSofia').innerHTML = today.format('DD/MM/YYYY');
            var t = setTimeout(startTimeSofia, 500);
        }

        startTimeSofia();
    </script>
    <script type="text/javascript">
        function startTimeLondon() {
            var today = moment.tz("Europe/London");
            document.getElementById('displayMomentLondon').innerHTML = today.format('HH:mm:ss');
            document.getElementById('displayJsDateLondon').innerHTML = today.format('DD/MM/YYYY');
            var t = setTimeout(startTimeLondon, 500);
        }

        startTimeLondon();
    </script>
    <script type="text/javascript">
        function startTimeMoscow() {
            var today = moment.tz("Europe/Moscow");
            document.getElementById('displayMomentMoscow').innerHTML = today.format('HH:mm:ss');
            document.getElementById('displayJsDateMoscow').innerHTML = today.format('DD/MM/YYYY');
            var t = setTimeout(startTimeMoscow, 500);
        }

        startTimeMoscow();
    </script>
    
    <script>
        var ctx = document.getElementById("AreaChart");
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                datasets: [{
                    label: "Reservations",
                    lineTension: 0.3,
                    backgroundColor: "rgba(78, 115, 223, 0.05)",
                    borderColor: "rgba(78, 115, 223, 1)",
                    pointRadius: 3,
                    pointBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointBorderColor: "rgba(78, 115, 223, 1)",
                    pointHoverRadius: 3,
                    pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                    pointHitRadius: 10,
                    pointBorderWidth: 2,
                    data: [@Model.JanuaryReservations,
                        @Model.FebruaryReservations,
                        @Model.MarchReservations,
                        @Model.AprilReservations,
                        @Model.MayReservations,
                        @Model.JuneReservations,
                        @Model.JulyReservations,
                        @Model.AugustReservations,
                        @Model.SeptemberReservations,
                        @Model.OctoberReservations,
                        @Model.NovemberReservations,
                        @Model.DecemberReservations],
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'date'
                        },
                        gridLines: {
                            display: true,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 12
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 10,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return number_format(value);
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: true,
                    intersect: true,
                    mode: 'index',
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                        }
                    }
                }
            }
        });
    </script>

    <script>
        var ctx = document.getElementById("BarChart");
        var myBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["@twoYearEarly", "@oneYearEarly", @thisYear],
                datasets: [{
                    label: "Reservations",
                    backgroundColor: "#4e73df",
                    hoverBackgroundColor: "#2e59d9",
                    borderColor: "#4e73df",
                    data: [@Model.ReservationsCountForTwoYearEarly, @Model.ReservationsCountForOneYearEarly, @Model.ReservationsCountForThisYear]
                }]
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'year'
                        },
                        gridLines: {
                            display: true,
                            drawBorder: true
                        },
                        ticks: {
                            maxTicksLimit: 10
                        },
                        maxBarThickness: 40,
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 10,
                            // Include a dollar sign in the ticks
                            callback: function(value, index, values) {
                                return number_format(value);
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: true,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: true,
                    caretPadding: 10,
                    callbacks: {
                        label: function(tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                        }
                    }
                },
            }
        });

    </script>

    <script>
        var ctx = document.getElementById("PieChart");
        var myPieChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["Occupied", "Empty"],
                datasets: [{
                    data: [@Model.OccupiedRoomsCount, @Model.AvailableRoomsCount],
                    backgroundColor: ['#FF4646', '#5AEAA5'],
                    hoverBackgroundColor: ['#C53636', '#4DC28A'],
                    hoverBorderColor: "rgba(234, 236, 244, 1)"
                }]
            },
            options: {
                maintainAspectRatio: false,
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#11069C",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: true,
                    caretPadding: 10
                },
                legend: {
                    display: true
                },
                cutoutPercentage: 10
            }
        });

    </script>
}
